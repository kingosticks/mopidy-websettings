{"version":3,"sources":["../node_modules/events/events.js","../node_modules/isomorphic-ws/browser.js","mopidy.js"],"names":["EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","module","exports","prototype","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","emit","type","er","handler","len","args","i","listeners","error","length","arguments","Error","err","context","call","Array","slice","apply","addListener","listener","m","newListener","push","warned","console","trace","on","once","fired","g","removeListener","list","position","splice","removeAllListeners","key","ret","listenerCount","evlistener","emitter","require","WebSocket","snakeToCamel","name","replace","match","toUpperCase","Mopidy","settings","_console","_getConsole","_settings","_configure","_backoffDelay","backoffDelayMin","_pendingRequests","_webSocket","_delegateEvents","autoConnect","connect","con","log","warn","newSettings","protocol","document","location","currentHost","host","webSocketUrl","backoffDelayMax","_cleanup","_handleWebSocketError","_handleMessage","_resetBackoffDelay","_getApiSpec","_reconnect","readyState","OPEN","close","webSocket","onclose","onerror","onopen","onmessage","message","closeEvent","Object","keys","forEach","requestId","reject","ConnectionError","timeToAttempt","setTimeout","off","stack","CONNECTING","Promise","CLOSING","CLOSED","resolve","jsonRpcMessage","jsonrpc","id","_nextRequestId","send","JSON","stringify","data","parse","hasOwnProperty","_handleResponse","_handleEvent","SyntaxError","responseMessage","result","ServerError","code","response","eventMessage","event","eventName","_send","method","then","_createApi","bind","catch","methods","fullMethodName","methodPath","path","objPath","parentObj","split","methodName","object","objName","camelObjName","isArray","params","description","lastUsed"],"mappings":"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","file":"mopidy.map","sourceRoot":"../src","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","const EventEmitter = require(\"events\");\nconst WebSocket = require(\"isomorphic-ws\");\n\nfunction snakeToCamel(name) {\n  return name.replace(/(_[a-z])/g, match =>\n    match.toUpperCase().replace(\"_\", \"\")\n  );\n}\n\nclass Mopidy extends EventEmitter {\n  constructor(settings) {\n    super();\n    this._console = this._getConsole(settings || {});\n    this._settings = this._configure(settings || {});\n    this._backoffDelay = this._settings.backoffDelayMin;\n    this._pendingRequests = {};\n    this._webSocket = null;\n    this._delegateEvents();\n    if (this._settings.autoConnect) {\n      this.connect();\n    }\n  }\n\n  _getConsole(settings) {\n    if (typeof settings.console !== \"undefined\") {\n      return settings.console;\n    }\n    const con = (typeof console !== \"undefined\" && console) || {};\n    con.log = con.log || (() => {});\n    con.warn = con.warn || (() => {});\n    con.error = con.error || (() => {});\n    return con;\n  }\n\n  _configure(settings) {\n    const newSettings = { ...settings };\n    const protocol =\n      typeof document !== \"undefined\" && document.location.protocol === \"https:\"\n        ? \"wss://\"\n        : \"ws://\";\n    const currentHost =\n      (typeof document !== \"undefined\" && document.location.host) ||\n      \"localhost\";\n    newSettings.webSocketUrl =\n      settings.webSocketUrl || `${protocol}${currentHost}/mopidy/ws`;\n    if (settings.autoConnect !== false) {\n      newSettings.autoConnect = true;\n    }\n    newSettings.backoffDelayMin = settings.backoffDelayMin || 1000;\n    newSettings.backoffDelayMax = settings.backoffDelayMax || 64000;\n    return newSettings;\n  }\n\n  _delegateEvents() {\n    // Remove existing event handlers\n    this.removeAllListeners(\"websocket:close\");\n    this.removeAllListeners(\"websocket:error\");\n    this.removeAllListeners(\"websocket:incomingMessage\");\n    this.removeAllListeners(\"websocket:open\");\n    this.removeAllListeners(\"state:offline\");\n    // Register basic set of event handlers\n    this.on(\"websocket:close\", this._cleanup);\n    this.on(\"websocket:error\", this._handleWebSocketError);\n    this.on(\"websocket:incomingMessage\", this._handleMessage);\n    this.on(\"websocket:open\", this._resetBackoffDelay);\n    this.on(\"websocket:open\", this._getApiSpec);\n    this.on(\"state:offline\", this._reconnect);\n  }\n\n  off(...args) {\n    if (args.length === 0) {\n      this.removeAllListeners();\n    } else if (args.length === 1) {\n      const arg = args[0];\n      if (typeof arg === \"string\") {\n        this.removeAllListeners(arg);\n      } else {\n        throw Error(\n          \"Expected no arguments, a string, or a string and a listener.\"\n        );\n      }\n    } else {\n      this.removeListener(...args);\n    }\n  }\n\n  connect() {\n    if (this._webSocket) {\n      if (this._webSocket.readyState === Mopidy.WebSocket.OPEN) {\n        return;\n      }\n      this._webSocket.close();\n    }\n\n    this._webSocket =\n      this._settings.webSocket ||\n      new Mopidy.WebSocket(this._settings.webSocketUrl);\n\n    this._webSocket.onclose = close => {\n      this.emit(\"websocket:close\", close);\n    };\n    this._webSocket.onerror = error => {\n      this.emit(\"websocket:error\", error);\n    };\n    this._webSocket.onopen = () => {\n      this.emit(\"websocket:open\");\n    };\n    this._webSocket.onmessage = message => {\n      this.emit(\"websocket:incomingMessage\", message);\n    };\n  }\n\n  _cleanup(closeEvent) {\n    Object.keys(this._pendingRequests).forEach(requestId => {\n      const { reject } = this._pendingRequests[requestId];\n      delete this._pendingRequests[requestId];\n      const error = new Mopidy.ConnectionError(\"WebSocket closed\");\n      error.closeEvent = closeEvent;\n      reject(error);\n    });\n    this.emit(\"state\", \"state:offline\");\n    this.emit(\"state:offline\");\n  }\n\n  _reconnect() {\n    this.emit(\"state\", \"reconnectionPending\", {\n      timeToAttempt: this._backoffDelay,\n    });\n    this.emit(\"reconnectionPending\", {\n      timeToAttempt: this._backoffDelay,\n    });\n    setTimeout(() => {\n      this.emit(\"state\", \"reconnecting\");\n      this.emit(\"reconnecting\");\n      this.connect();\n    }, this._backoffDelay);\n    this._backoffDelay = this._backoffDelay * 2;\n    if (this._backoffDelay > this._settings.backoffDelayMax) {\n      this._backoffDelay = this._settings.backoffDelayMax;\n    }\n  }\n\n  _resetBackoffDelay() {\n    this._backoffDelay = this._settings.backoffDelayMin;\n  }\n\n  close() {\n    this.off(\"state:offline\", this._reconnect);\n    if (this._webSocket) {\n      this._webSocket.close();\n    }\n  }\n\n  _handleWebSocketError(error) {\n    this._console.warn(\"WebSocket error:\", error.stack || error);\n  }\n\n  _send(message) {\n    switch (this._webSocket.readyState) {\n      case Mopidy.WebSocket.CONNECTING:\n        return Promise.reject(\n          new Mopidy.ConnectionError(\"WebSocket is still connecting\")\n        );\n      case Mopidy.WebSocket.CLOSING:\n        return Promise.reject(\n          new Mopidy.ConnectionError(\"WebSocket is closing\")\n        );\n      case Mopidy.WebSocket.CLOSED:\n        return Promise.reject(\n          new Mopidy.ConnectionError(\"WebSocket is closed\")\n        );\n      default:\n        return new Promise((resolve, reject) => {\n          const jsonRpcMessage = {\n            ...message,\n            jsonrpc: \"2.0\",\n            id: this._nextRequestId(),\n          };\n          this._pendingRequests[jsonRpcMessage.id] = { resolve, reject };\n          this._webSocket.send(JSON.stringify(jsonRpcMessage));\n          this.emit(\"websocket:outgoingMessage\", jsonRpcMessage);\n        });\n    }\n  }\n\n  _handleMessage(message) {\n    try {\n      const data = JSON.parse(message.data);\n      if (Object.hasOwnProperty.call(data, \"id\")) {\n        this._handleResponse(data);\n      } else if (Object.hasOwnProperty.call(data, \"event\")) {\n        this._handleEvent(data);\n      } else {\n        this._console.warn(\n          `Unknown message type received. Message was: ${message.data}`\n        );\n      }\n    } catch (error) {\n      if (error instanceof SyntaxError) {\n        this._console.warn(\n          `WebSocket message parsing failed. Message was: ${message.data}`\n        );\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  _handleResponse(responseMessage) {\n    if (\n      !Object.hasOwnProperty.call(this._pendingRequests, responseMessage.id)\n    ) {\n      this._console.warn(\n        \"Unexpected response received. Message was:\",\n        responseMessage\n      );\n      return;\n    }\n    const { resolve, reject } = this._pendingRequests[responseMessage.id];\n    delete this._pendingRequests[responseMessage.id];\n    if (Object.hasOwnProperty.call(responseMessage, \"result\")) {\n      resolve(responseMessage.result);\n    } else if (Object.hasOwnProperty.call(responseMessage, \"error\")) {\n      const error = new Mopidy.ServerError(responseMessage.error.message);\n      error.code = responseMessage.error.code;\n      error.data = responseMessage.error.data;\n      reject(error);\n      this._console.warn(\"Server returned error:\", responseMessage.error);\n    } else {\n      const error = new Error(\"Response without 'result' or 'error' received\");\n      error.data = { response: responseMessage };\n      reject(error);\n      this._console.warn(\n        \"Response without 'result' or 'error' received. Message was:\",\n        responseMessage\n      );\n    }\n  }\n\n  _handleEvent(eventMessage) {\n    const data = { ...eventMessage };\n    delete data.event;\n    const eventName = `event:${snakeToCamel(eventMessage.event)}`;\n    this.emit(\"event\", eventName, data);\n    this.emit(eventName, data);\n  }\n\n  _getApiSpec() {\n    return this._send({ method: \"core.describe\" })\n      .then(this._createApi.bind(this))\n      .catch(this._handleWebSocketError);\n  }\n\n  _createApi(methods) {\n    const caller = method => (...args) => {\n      const message = { method };\n      if (args.length === 0) {\n        return this._send(message);\n      }\n      if (args.length > 1) {\n        return Promise.reject(\n          new Error(\n            \"Expected zero arguments, a single array, or a single object.\"\n          )\n        );\n      }\n      if (!Array.isArray(args[0]) && args[0] !== Object(args[0])) {\n        return Promise.reject(new TypeError(\"Expected an array or an object.\"));\n      }\n      [message.params] = args;\n      return this._send(message);\n    };\n\n    const getPath = fullName => {\n      let path = fullName.split(\".\");\n      if (path.length >= 1 && path[0] === \"core\") {\n        path = path.slice(1);\n      }\n      return path;\n    };\n\n    const createObjects = objPath => {\n      let parentObj = this;\n      objPath.forEach(objName => {\n        const camelObjName = snakeToCamel(objName);\n        parentObj[camelObjName] = parentObj[camelObjName] || {};\n        parentObj = parentObj[camelObjName];\n      });\n      return parentObj;\n    };\n\n    const createMethod = fullMethodName => {\n      const methodPath = getPath(fullMethodName);\n      const methodName = snakeToCamel(methodPath.slice(-1)[0]);\n      const object = createObjects(methodPath.slice(0, -1));\n      object[methodName] = caller(fullMethodName);\n      object[methodName].description = methods[fullMethodName].description;\n      object[methodName].params = methods[fullMethodName].params;\n    };\n\n    Object.keys(methods).forEach(createMethod);\n\n    this.emit(\"state\", \"state:online\");\n    this.emit(\"state:online\");\n  }\n}\n\nclass ConnectionError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ConnectionError\";\n  }\n}\nMopidy.ConnectionError = ConnectionError;\n\nclass ServerError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ServerError\";\n  }\n}\nMopidy.ServerError = ServerError;\n\nMopidy.WebSocket = WebSocket;\n\nMopidy.prototype._nextRequestId = (() => {\n  let lastUsed = -1;\n  return () => {\n    lastUsed += 1;\n    return lastUsed;\n  };\n})();\n\nmodule.exports = Mopidy;\n"]}